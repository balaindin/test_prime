var gaugeExecutionResult = {"suiteResult":{"specResults":[{"protoSpec":{"specHeading":"Specification Heading","items":[{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"This is an executable specification file. This file follows markdown syntax."}},{"itemType":2,"comment":{"text":"Every heading in this file denotes a scenario. Every bulleted point denotes a step."}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"To execute this specification, run"}},{"itemType":2,"comment":{"text":"\tgauge specs"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":1,"step":{"actualText":"Vowels in English language are \"aeiou\".","parsedText":"Vowels in English language are {}.","fragments":[{"fragmentType":1,"text":"Vowels in English language are "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"aeiou","name":""}},{"fragmentType":1,"text":"."}],"stepExecutionResult":{"skipped":false}}},{"itemType":4,"scenario":{"scenarioHeading":"Vowel counts in single word","failed":false,"contexts":[{"itemType":1,"step":{"actualText":"Vowels in English language are \"aeiou\".","parsedText":"Vowels in English language are {}.","fragments":[{"fragmentType":1,"text":"Vowels in English language are "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"aeiou","name":""}},{"fragmentType":1,"text":"."}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":1},"skipped":false}}}],"scenarioItems":[{"itemType":2,"comment":{"text":"\n"}},{"itemType":7,"tags":{"tags":["single word"]}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":1,"step":{"actualText":"The word \"gauge\" has \"3\" vowels.","parsedText":"The word {} has {} vowels.","fragments":[{"fragmentType":1,"text":"The word "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"gauge","name":""}},{"fragmentType":1,"text":" has "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"3","name":""}},{"fragmentType":1,"text":" vowels."}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":2},"skipped":false}}}],"tags":["single word"],"executionTime":3,"skipped":false}},{"itemType":4,"scenario":{"scenarioHeading":"Vowel counts in multiple word","failed":false,"contexts":[{"itemType":1,"step":{"actualText":"Vowels in English language are \"aeiou\".","parsedText":"Vowels in English language are {}.","fragments":[{"fragmentType":1,"text":"Vowels in English language are "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"aeiou","name":""}},{"fragmentType":1,"text":"."}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":0},"skipped":false}}}],"scenarioItems":[{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"This is the second scenario in this specification"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"Here's a step that takes a table"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":1,"step":{"actualText":"Almost all words have vowels","parsedText":"Almost all words have vowels {}","fragments":[{"fragmentType":1,"text":"Almost all words have vowels "},{"fragmentType":2,"parameter":{"parameterType":5,"name":"","table":{"headers":{"cells":["Word","Vowel Count"]},"rows":[{"cells":["Gauge","3"]},{"cells":["Mingle","2"]},{"cells":["Snap","1"]},{"cells":["GoCD","1"]},{"cells":["Rhythm","0"]}]}}}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":0},"skipped":false}}}],"executionTime":0,"skipped":false}}],"isTableDriven":false,"fileName":"C:\\MyFolder\\workspaces_eclipse\\gauge\\Test_Prime\\specs\\example.spec"},"scenarioCount":2,"scenarioFailedCount":0,"failed":false,"executionTime":3,"skipped":false,"scenarioSkippedCount":0},{"protoSpec":{"specHeading":"Prime Number Verification","items":[{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"This example is used to create BDD test cases using Gauge to verify prime numbers."}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":4,"scenario":{"scenarioHeading":"Positive scenario Verify prime number","failed":false,"scenarioItems":[{"itemType":2,"comment":{"text":"\n"}},{"itemType":1,"step":{"actualText":"Is 3 a prime number \"3\"","parsedText":"Is 3 a prime number {}","fragments":[{"fragmentType":1,"text":"Is 3 a prime number "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"3","name":""}}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":1},"skipped":false}}}],"executionTime":1,"skipped":false}},{"itemType":4,"scenario":{"scenarioHeading":"Neagive scenario Verify prime number","failed":false,"scenarioItems":[{"itemType":1,"step":{"actualText":"Check 4 for not a prime number \"4\"","parsedText":"Check 4 for not a prime number {}","fragments":[{"fragmentType":1,"text":"Check 4 for not a prime number "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"4","name":""}}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":0},"skipped":false}}}],"executionTime":0,"skipped":false}},{"itemType":4,"scenario":{"scenarioHeading":"Prime numbers validations","failed":false,"scenarioItems":[{"itemType":1,"step":{"actualText":"Almost all numbers are prime","parsedText":"Almost all numbers are prime {}","fragments":[{"fragmentType":1,"text":"Almost all numbers are prime "},{"fragmentType":2,"parameter":{"parameterType":5,"name":"","table":{"headers":{"cells":["Number"]},"rows":[{"cells":["11"]},{"cells":["3"]},{"cells":["5"]},{"cells":["7"]}]}}}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":0},"skipped":false}}}],"executionTime":0,"skipped":false}}],"isTableDriven":false,"fileName":"C:\\MyFolder\\workspaces_eclipse\\gauge\\Test_Prime\\specs\\prime.spec"},"scenarioCount":3,"scenarioFailedCount":0,"failed":false,"executionTime":1,"skipped":false,"scenarioSkippedCount":0}],"failed":false,"specsFailedCount":0,"executionTime":137,"successRate":100,"environment":"default","tags":"","projectName":"Test_Prime","timestamp":"Dec 14, 2016 at 10:18pm","specsSkippedCount":0}};
 var itemTypesMap = {"1":"Step","2":"Comment","3":"Concept","4":"Scenario","5":"TableDrivenScenario","6":"Table","7":"Tags"};
 var parameterTypesMap = {"1":"Static","2":"Dynamic","3":"Special_String","4":"Special_Table","5":"Table"};
 var fragmentTypesMap = {"1":"Text","2":"Parameter"};